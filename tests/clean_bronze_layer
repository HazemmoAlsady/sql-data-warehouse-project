
----------- crm_cust_info --------------
-- Check for nulls or duplicates in primary key
-- expectations: no result
SELECT cst_id, count(*) 
FROM bronze.crm_cust_info
group by cst_id
having count(*) > 1;


-- check for unwanted spaces
-- Exepcation: No Results
select cst_firstname
from bronze.crm_cust_info
where cst_firstname != TRIM(cst_firstname)

-- check for unwanted spaces
-- Exepcation: No Results
select cst_lastname
from bronze.crm_cust_info
where cst_lastname != TRIM(cst_lastname)

-- data standardization & Consistency 
select Distinct cst_gndr
from bronze.crm_cust_info

select Distinct cst_marital_status
from bronze.crm_cust_info

select * from bronze.crm_cust_info

----------- crm_prd_info --------------

-- Check for nulls or duplicates in primary key
-- expectations: no result
select prd_id, count(*)
from bronze.crm_prd_info
group by prd_id
having count(*) > 1 or prd_id is null


-- check for unwanted spaces 
-- Expectations: No Results

select prd_nm
from bronze.crm_prd_info
where prd_nm != TRIM(prd_nm)

-- check for nuls or negative numbers
-- Expectations: No Results
select prd_cost
from bronze.crm_prd_info
where prd_cost < 0 OR prd_cost IS NULL


-- data standardization & Consistency 
select distinct prd_line
from bronze.crm_prd_info

-- check for invalid date orders
select *
from bronze.crm_prd_info
where prd_end_dt < prd_start_dt

select * from bronze.crm_prd_info


select 
	prd_id,
	prd_key,
	prd_nm,
	prd_start_dt,
	prd_end_dt,
	lead(prd_start_dt) over(partition by prd_key order by prd_start_dt)-1 as prd_end_dt_test
from bronze.crm_prd_info
where prd_key IN ('AC-HE-HL-U509-R', 'AC-HE-HL-U509')


--------------- crm_sales_details ----------------


-- check for inavlid dates
select 
	NULLIF(sls_due_dt, 0) sls_due_dt
from bronze.crm_sales_details
where sls_due_dt <= 0 OR LEN(sls_due_dt) != 8 OR sls_due_dt > 20500101 OR sls_due_dt < 19000101

-- cehck for invalid date orders

select * 
from bronze.crm_sales_details
where sls_order_dt > sls_ship_dt


-- check data consistency: between sales, quantity, and price
-- >> Sales = Quantity * Price
-- >> value must not be NUll, Zero, or Negative

select distinct
	sls_sales AS old_sls_sales,
	CASE WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price)
			THEN sls_quantity * ABS(sls_price)
		 ELSE sls_sales
	END AS sls_sales,
	sls_quantity,
	sls_price AS old_sales_price,
	CASE WHEN sls_price IS NULL OR sls_price <= 0
			THEN sls_sales / NULLIF(sls_quantity, 0)
		ELSE sls_price
	END AS sls_price
from bronze.crm_sales_details
where sls_sales != sls_quantity * sls_price
OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
OR sls_sales <= 0 OR sls_quantity <= 0 OR sls_price <= 0
order by sls_sales, sls_quantity, sls_price



------------- erp_cust_az12 ---------------
-- Identify Out-of_Range Dates
select distinct bdate
from bronze.erp_cust_az12 
where bdate < '1924-01-01' OR bdate > GETDATE()

-- Data Standardization & Consistency
select 
	CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4, LEN(cid))
		 ELSE cid
	END cid,
	CASE 
		 WHEN bdate > GETDATE() 
			THEN NULL
		 ELSE bdate
	END AS bdate,
	CASE 
		WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'Female'
		WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'Male'
		ELSE 'n/a'
	END AS gen
from bronze.erp_cust_az12 


select distinct  gen
from bronze.erp_cust_az12



-------------- erp.loc_a101 ---------------
select 
	REPLACE(cid, '-', '') cid,
	CASE WHEN TRIM(cntry) = 'DE' THEN 'Germany'
		 WHEN TRIM(cntry) IN ('US', 'USA') THEN 'United States'
		 WHEN TRIM(cntry) = '' OR cntry IS NULL THEN 'n/a'
		 ELSE TRIM(cntry)
	END AS cntry -- Normalize and Handle missing value 
from bronze.erp_loc_a101

-- Data Standardization & Consistency
select distinct cntry
from bronze.erp_loc_a101
order by cntry

-------------- erp.px_cat_g1v2 ---------------

select 
	id,
	cat,
	subcat,
	maintenance
from bronze.erp_px_cat_g1v2 

select *
from silver.crm_prd_info


-- check for unwanted spaces 
select * from bronze.erp_px_cat_g1v2
where cat != TRIM(cat) OR subcat != Trim(subcat) OR maintenance != TRIM(maintenance)


-- Data Standardization & Consistency
select distinct cat
from bronze.erp_px_cat_g1v2


select distinct subcat
from bronze.erp_px_cat_g1v2


select distinct maintenance
from bronze.erp_px_cat_g1v2
